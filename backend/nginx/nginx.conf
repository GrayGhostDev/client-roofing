# =============================================================================
# Nginx Configuration for iSwitch Roofs CRM
# =============================================================================
# This configuration provides:
# - Reverse proxy for backend and frontend
# - SSL/TLS termination
# - Security headers
# - Gzip compression
# - Rate limiting
# - Static file serving
# =============================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Maximum number of open files per worker
worker_rlimit_nofile 8192;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # =============================================================================
    # Basic Settings
    # =============================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # File upload limits
    client_max_body_size 50M;
    client_body_buffer_size 128k;

    # =============================================================================
    # Gzip Compression
    # =============================================================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # =============================================================================
    # Rate Limiting
    # =============================================================================
    # Define rate limit zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=120r/m;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;

    # Connection limits
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # =============================================================================
    # SSL Settings (Modern Configuration)
    # =============================================================================
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # =============================================================================
    # Security Headers
    # =============================================================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # =============================================================================
    # Upstream Servers
    # =============================================================================
    upstream backend_api {
        least_conn;
        server backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream frontend_app {
        least_conn;
        server frontend:8501 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # =============================================================================
    # HTTP to HTTPS Redirect
    # =============================================================================
    server {
        listen 80;
        listen [::]:80;
        server_name app.iswitchroofs.com iswitchroofs.com;

        # Allow Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # =============================================================================
    # Main Application Server (HTTPS)
    # =============================================================================
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name app.iswitchroofs.com;

        # SSL certificates (update paths for your setup)
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

        # =============================================================================
        # Backend API Routes
        # =============================================================================
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            limit_conn addr 10;

            # Proxy settings
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;

            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 2;
        }

        # Authentication endpoints (stricter rate limiting)
        location ~ ^/api/(auth|login|register|reset-password) {
            limit_req zone=auth burst=5 nodelay;
            limit_conn addr 5;

            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://backend_api;
            access_log off;
        }

        # =============================================================================
        # Frontend Dashboard Routes
        # =============================================================================
        location / {
            # Rate limiting
            limit_req zone=general burst=10 nodelay;
            limit_conn addr 10;

            # Proxy to Streamlit
            proxy_pass http://frontend_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Streamlit-specific settings
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 86400;
        }

        # Streamlit WebSocket endpoint
        location /_stcore/stream {
            proxy_pass http://frontend_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_read_timeout 86400;
        }

        # =============================================================================
        # Static Files (Optional - if serving static files directly)
        # =============================================================================
        location /static/ {
            alias /var/www/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Uploaded files
        location /uploads/ {
            alias /var/www/uploads/;
            expires 7d;
            add_header Cache-Control "public";

            # Security: Prevent execution of uploaded scripts
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                return 403;
            }
        }

        # =============================================================================
        # Security: Block Common Attack Patterns
        # =============================================================================
        # Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block access to version control files
        location ~ /\.git {
            deny all;
            access_log off;
            log_not_found off;
        }

        # =============================================================================
        # Custom Error Pages
        # =============================================================================
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # =============================================================================
    # API-Only Server (Optional - separate subdomain for API)
    # =============================================================================
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.iswitchroofs.com;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # CORS headers for API-only subdomain
        add_header 'Access-Control-Allow-Origin' 'https://app.iswitchroofs.com' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        location / {
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /health {
            proxy_pass http://backend_api;
            access_log off;
        }
    }
}

# =============================================================================
# Configuration Tips
# =============================================================================
#
# 1. SSL Certificate Setup (Let's Encrypt):
#    certbot certonly --webroot -w /var/www/certbot \
#      -d app.iswitchroofs.com -d api.iswitchroofs.com
#
# 2. Test configuration:
#    nginx -t
#
# 3. Reload configuration:
#    nginx -s reload
#
# 4. View error logs:
#    tail -f /var/log/nginx/error.log
#
# 5. View access logs:
#    tail -f /var/log/nginx/access.log
#
# 6. Check SSL configuration:
#    openssl s_client -connect app.iswitchroofs.com:443
#
# 7. Test SSL with Mozilla Observatory:
#    https://observatory.mozilla.org/
#
# 8. Rate limit testing:
#    ab -n 100 -c 10 https://app.iswitchroofs.com/api/health
#
# =============================================================================
# Security Checklist
# =============================================================================
#
# [ ] SSL certificates installed and auto-renewing
# [ ] Strong SSL ciphers configured
# [ ] HSTS header enabled
# [ ] Security headers configured
# [ ] Rate limiting configured
# [ ] File upload limits set
# [ ] Hidden files blocked
# [ ] Version control files blocked
# [ ] Server tokens disabled
# [ ] Custom error pages configured
# [ ] Log rotation configured
# [ ] Firewall allows only 80/443
# [ ] DDoS protection enabled (Cloudflare recommended)
#
# =============================================================================
